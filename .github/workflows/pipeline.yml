name: build
run-name: Build and publish
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        required: true
        default: "develop"
        type: string
      version:
        description: "Release Version Name"
        required: true
        default: "Development Build"
        type: string
      prerelease:
        description: "Whether to mark as a prerelease"
        required: true
        type: boolean
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-20.04
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ inputs.version }}
          tag_name: ${{ inputs.tag }}
          draft: false
          prerelease: ${{ inputs.prerelease }}
          generate_release_notes: false

  build:
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-11]
        include:
          - os: ubuntu-20.04
            output_name: ./build/bin/uplink-linux64
          - os: windows-latest
            output_name: |
              ./build/bin/uplink.exe
              ./build/bin/uplink-amd64-installer.exe
            opts: -nsis
          - os: macos-11
            output_name: ./build/bin/Uplink.app
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.18"

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Linux deps
        if: runner.os == 'Linux'
        run: sudo apt-get install libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Install Scoop
        if: runner.os == 'Windows'
        uses: MinoruSekine/setup-scoop@v1
        with:
          add_extras_bucket: "true"

      - name: Install NSIS
        if: runner.os == 'Windows'
        run: scoop install nsis

      - name: Build with Wails
        run: wails build ${{ matrix.opts }} -ldflags "-X 'main.version=${{ inputs.tag }}'"

      - name: Upload Build Artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag }}
          files: ${{ matrix.output_name }}
